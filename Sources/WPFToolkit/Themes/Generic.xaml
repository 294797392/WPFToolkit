<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:kcontrol="clr-namespace:WPFToolkit.Controls"
                    xmlns:syscore="clr-namespace:System;assembly=mscorlib"
                    xmlns:kconv="clr-namespace:WPFToolkit.Converters">

    <CornerRadius x:Key="GLOABL_CornerRadius">4</CornerRadius>
    <Thickness x:Key="GLOBAL_Margin">3</Thickness>
    <DropShadowEffect x:Key="GLOBAL_ShadowEffect" Color="{DynamicResource ResourceKey=BrushShadowColor}" ShadowDepth="0" Opacity="0.4" BlurRadius="5"/>

    <kconv:ColorTextConverter x:Key="ColorTextConverter"/>
    <kconv:NullableVisiblityConverter x:Key="NullableVisiblityConverter"/>
    <kconv:NullableVisiblityConverter2 x:Key="NullableVisiblityConverter2"/>

    <Style TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="YaHei"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimaryText}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Border}">
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="StyleScrollBar" TargetType="{x:Type ScrollBar}">
        <Style.Resources>
            <!-- 拖动标样式 -->
            <Style x:Key="StyleThumbLocal" TargetType="{x:Type Thumb}">
                <Setter Property="Opacity" Value="0.55"/>
                <Setter Property="Background" Value="#303131"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" x:Name="HoverRectangle" 
                                               VerticalAlignment="Stretch" Width="{TemplateBinding Width}" 
                                               RadiusX="6" RadiusY="6" Stroke="{x:Null}" Fill="{TemplateBinding Background}"
                                               Opacity="{TemplateBinding Opacity}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True" />
                                <Trigger Property="IsEnabled" Value="False" >
                                    <Setter Property="Opacity" TargetName="Grid" Value="0.1"/>
                                </Trigger>
                                <Trigger Property="IsDragging" Value="True">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- 拖动条两边的RepeatButton -->
            <Style x:Key="NuclearScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Focusable" Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" 
                                       StrokeThickness="{TemplateBinding BorderThickness}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="StyleRepeatButtonBase" TargetType="{x:Type RepeatButton}">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Style>
            <Style x:Key="StyleRepeatButtonDecrease" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ResourceKey=StyleRepeatButtonBase}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Path x:Name="Up_Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Data="M 0 0 L 5 5 L 10 0 Z" Fill="Black" Opacity="0.7" SnapsToDevicePixels="True">
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="RotateTransform" Angle="180"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="StyleRepeatButtonIncrease" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ResourceKey=StyleRepeatButtonBase}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Grid>
                                <Path x:Name="Up_Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          Data="M 0 0 L 5 5 L 10 0 Z" Fill="Black" Opacity="0.7" SnapsToDevicePixels="True">
                                    <Path.LayoutTransform>
                                        <RotateTransform x:Name="RotateTransform" Angle="0"/>
                                    </Path.LayoutTransform>
                                </Path>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Background="Transparent" Width="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition Height="10" />
                        </Grid.RowDefinitions>

                        <!-- 上面的三角形 -->
                        <RepeatButton Grid.Row="0" x:Name="DecreaseRepeat" Command="ScrollBar.LineUpCommand" Style="{StaticResource ResourceKey=StyleRepeatButtonDecrease}"/>

                        <Grid Grid.Row="1">
                            <!-- 滑动条背景 -->
                            <Border Background="{TemplateBinding Background}" 
                                        IsHitTestVisible="False" CornerRadius="6"/>
                            <!-- 滑动条 -->
                            <Track x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Style="{StaticResource ResourceKey=StyleThumbLocal}" Width="10"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <!-- 下面的三角形 -->
                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Command="ScrollBar.LineDownCommand" Style="{StaticResource ResourceKey=StyleRepeatButtonIncrease}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />
                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Black" TargetName="Thumb"/>
                            <Setter Property="Opacity" Value="0.7" TargetName="Thumb"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <!-- 水平滚动条 -->
                        <ScrollBar Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" 
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                       Orientation="Horizontal" 
                                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" 
                                       AutomationProperties.AutomationId="HorizontalScrollBar" 
                                       Style="{StaticResource ResourceKey=StyleScrollBar}"/>

                        <!-- 垂直滚动条 -->
                        <ScrollBar Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" 
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Orientation="Vertical" 
                                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" 
                                       AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Hand"
                                       Style="{StaticResource ResourceKey=StyleScrollBar}"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="PART_VerticalScrollBar">
                            <Setter Property="Background" TargetName="PART_VerticalScrollBar">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="PART_HorizontalScrollBar">
                            <Setter Property="Background" TargetName="PART_HorizontalScrollBar">
                                <Setter.Value>
                                    <SolidColorBrush Color="Black" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ToolkitHotkey" TargetType="{x:Type tkctrl:Hotkey}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=BrushBorder}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ResourceKey=BrushBorder}"/>
                <Setter Property="Background" Value="{StaticResource ResourceKey=BrushPrimary3}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tkctrl:Hotkey}">

                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <TextBlock x:Name="PART_HotkeyText" Text="{TemplateBinding HotkeyText}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextOptions.TextFormattingMode="Display"/>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!-- KComboBox -->
    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BrushBorderExtralight}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BrushBorderExtralight}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Padding" Value="15,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimaryText}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type kcontrol:KComboBox}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushBorderHover}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#f5f7fa"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SelectionsThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="SelectionsBackground" Value="White"/>
        <Setter Property="CornerRadius" Value="{StaticResource ResourceKey=GLOABL_CornerRadius}"/>
        <Setter Property="Margin" Value="{StaticResource ResourceKey=GLOBAL_Margin}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushBorderBase}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimaryText}"/>
        <Setter Property="SelectionsBorder" Value="{DynamicResource ResourceKey=BrushBorderLight}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourceKey=ComboBoxItemStyle}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type kcontrol:KComboBox}">

                    <ControlTemplate.Resources>
                        <Style TargetType="ToggleButton" x:Key="ComboToggleStyle">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <!--<Setter Property="Background" Value="{DynamicResource ResourceKey=BrushComboBoxMouseOverBackground}"/>-->
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <!--<Setter Property="Background" Value="{DynamicResource ResourceKey=BrushComboBoxMousePressedBackground}"/>-->
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Padding" Value="3"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"/>
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource ResourceKey=StyleScrollViewer}"></Style>
                        <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource ResourceKey=StyleScrollBar}"></Style>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="15"/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" Grid.ColumnSpan="2" x:Name="BorderBackground" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>

                                <ToggleButton Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right" HorizontalAlignment="Stretch" 
                                              x:Name="DropDownToggle" VerticalAlignment="Stretch" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press" Style="{StaticResource ResourceKey=ComboToggleStyle}">
                                    <Path Height="4" HorizontalAlignment="Right" Margin="0,0,6,0" x:Name="BtnArrow" Width="8" Stretch="Uniform" 
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " Fill="{DynamicResource ResourceKey=BrushBorderBase}"/>
                                </ToggleButton>

                                <ContentPresenter Grid.Column="0" x:Name="ContentSite" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,10,0"
                                                  Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"
                                                  Visibility="{TemplateBinding Placeholder, Converter={StaticResource ResourceKey=NullableVisiblityConverter2}}"/>

                                <ContentPresenter Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="15,0,10,0"
                                                  Content="{TemplateBinding Placeholder}" ContentTemplate="{TemplateBinding PlaceholderTemplate}"
                                                  Visibility="{TemplateBinding Placeholder, Converter={StaticResource ResourceKey=NullableVisiblityConverter}}"
                                                  IsHitTestVisible="False"/>

                            </Grid>
                        </Border>
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Fade">
                            <!--Width="{TemplateBinding ActualWidth}"-->
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" Width="Auto" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border Height="Auto" HorizontalAlignment="Stretch" x:Name="PopupBorder" Background="{TemplateBinding SelectionsBackground}" 
                                        BorderBrush="{TemplateBinding SelectionsBorder}" BorderThickness="{TemplateBinding SelectionsThickness}" ClipToBounds="False"
                                        Margin="3" CornerRadius="{TemplateBinding CornerRadius}" Effect="{StaticResource ResourceKey=GLOBAL_ShadowEffect}"/>

                                <ScrollViewer BorderThickness="0" BorderBrush="{x:Null}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" 
                                              VerticalScrollBarVisibility="Auto" CanContentScroll="True" Margin="4" ClipToBounds="True">
                                    <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                </ScrollViewer>

                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- KButton -->
    <Style TargetType="{x:Type kcontrol:KButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushPrimaryPressed}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimaryPressed}"/>
                <Setter Property="Padding" Value="2,2,0,0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ResourceKey=BrushPrimary}"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="{StaticResource ResourceKey=GLOBAL_Margin}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushBorderBase}"/>
        <Setter Property="CornerRadius" Value="{StaticResource ResourceKey=GLOABL_CornerRadius}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type kcontrol:KButton}">

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedState">
                                        <DoubleAnimation From="0" To="1" Duration="00:00:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckedState">
                                        <DoubleAnimation From="1" To="0" Duration="00:00:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledState">
                                        <DoubleAnimation From="0" To="0.5" Duration="00:00:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledState">
                                        <DoubleAnimation From="0.5" To="0" Duration="00:00:0.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>

                    <Grid>

                        <Border x:Name="NormalState" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" 
                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}"/>

                        <Border x:Name="CheckedState" BorderBrush="{DynamicResource ResourceKey=BrushPrimary}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{DynamicResource ResourceKey=BrushPrimaryHover}" Opacity="0" CornerRadius="{TemplateBinding CornerRadius}"/>


                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" />

                        <Border x:Name="DisabledState" Background="White" Opacity="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- KTextBoxStyle -->
    <Style TargetType="{x:Type kcontrol:KTextBox}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="{StaticResource ResourceKey=GLOBAL_Margin}"/>
    </Style>

    <!-- KColorPicker -->
    <Style TargetType="{x:Type kcontrol:KColorPicker}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ResourceKey=BrushBorderBase}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type kcontrol:KColorPicker}">

                    <ControlTemplate.Resources>

                    </ControlTemplate.Resources>

                    <Grid>
                        <kcontrol:KButton IsChecked="{Binding Path=IsOpened, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0"
                                          CanChecked="True" Background="Transparent" Content="{TemplateBinding Content}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                        <Popup IsOpen="{TemplateBinding IsOpened}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False">
                            <Grid Width="320" Height="220">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                        Margin="4" Effect="{StaticResource ResourceKey=GLOBAL_ShadowEffect}" CornerRadius="{StaticResource ResourceKey=GLOABL_CornerRadius}"/>

                                <Grid Margin="10,10,10,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="45"/>
                                    </Grid.RowDefinitions>

                                    <Grid Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="10"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid Grid.Column="0" x:Name="PART_ColorGrid">
                                            <Canvas>
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop x:Name="GradientStop" Offset="1"/>
                                                            <GradientStop Offset="0" Color="White"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>
                                            </Canvas>
                                            <Canvas ClipToBounds="False">
                                                <Canvas.Background>
                                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Offset="0" Color="Transparent"/>
                                                            <GradientStop Offset="1" Color="Black"/>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Canvas.Background>

                                                <Border x:Name="PART_Ball" Width="10" Height="10" CornerRadius="10" Background="Transparent" BorderThickness="1" 
                                                        BorderBrush="White" IsHitTestVisible="False"/>

                                            </Canvas>
                                        </Grid>

                                        <Canvas Grid.Column="2" x:Name="PART_ColorBar">
                                            <Canvas.Background>
                                                <LinearGradientBrush x:Name="PART_ColorBarBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                                                    <LinearGradientBrush.GradientStops>
                                                        <GradientStop Offset="0" Color="#FF0000"/>
                                                        <GradientStop Offset="0.166" Color="#ff00ff"/>
                                                        <GradientStop Offset="0.333" Color="#0000ff"/>
                                                        <GradientStop Offset="0.5" Color="#00ffff"/>
                                                        <GradientStop Offset="0.666" Color="#00ff00"/>
                                                        <GradientStop Offset="0.833" Color="#ffff00"/>
                                                        <GradientStop Offset="1" Color="#ff0000"/>
                                                    </LinearGradientBrush.GradientStops>
                                                </LinearGradientBrush>
                                            </Canvas.Background>
                                        </Canvas>

                                    </Grid>

                                    <Grid Grid.Row="1" ClipToBounds="False">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <kcontrol:KTextBox Grid.Column="0" x:Name="PART_ColorText" Height="27" IsReadOnly="True" Text="{TemplateBinding SelectedColor, Converter={StaticResource ResourceKey=ColorTextConverter}}"/>

                                        <kcontrol:KButton Grid.Column="1" x:Name="PART_ClearButton" Content="清空" Height="27" Width="60"/>
                                        <kcontrol:KButton Grid.Column="2" x:Name="PART_OKButton" Content="确定" Height="27" Width="60" Margin="3,3,0,3"/>

                                    </Grid>

                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>